<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">
<title>PiRover</title>
<style>
* {font-family: monospace; font-size: 1em; text-align: center; color: white;}
* {-webkit-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none;}
* {margin: 0px; padding: 0px; box-sizing: border-box;}
body {background-color: black; background-size: 100vw 100vh; background-repeat: no-repeat;}
.button {opacity: 0.2; color: white; background-color: black; width: 1.5cm; height: 1.5cm; border: 0.1cm solid white; font-size: 1cm;}
.button:hover {color: gray; background-color: black; border: 0.1cm solid gray;}
.button:active {color: black; background-color: white; border: 0.1cm solid white;}
</style>
</head>
<body>

<div>
	<table style="float:left;">
		<tr>
			<td><div class="button" onmousedown="move(7)" ontouchstart="move(7)">‚¨â</div></td>
			<td><div class="button" onmousedown="move(8)" ontouchstart="move(8)">‚¨Ü</div></td>
			<td><div class="button" onmousedown="move(9)" ontouchstart="move(9)">‚¨à</div></td>
		</tr>
		<tr>
			<td><div class="button" onmousedown="move(4)" ontouchstart="move(4)">‚ü≤</div></td>
			<td><div class="button" onmousedown="stop()"  ontouchstart="stop()">üõë</div></td>
			<td><div class="button" onmousedown="move(6)" ontouchstart="move(6)">‚ü≥</div></td>
		</tr>
		<tr>
			<td><div class="button" onmousedown="move(1)" ontouchstart="move(1)">‚¨ã</div></td>
			<td><div class="button" onmousedown="move(2)" ontouchstart="move(2)">‚¨á</div></td>
			<td><div class="button" onmousedown="move(3)" ontouchstart="move(3)">‚¨ä</div></td>
		</tr>
	</table>
	<table style="float:right;">
		<tr>
			<td><div class="button" onclick="cam(7)">‚áñ</div></td>
			<td><div class="button" onclick="cam(8)">‚áë</div></td>
			<td><div class="button" onclick="cam(9)">‚áó</div></td>
		</tr>
		<tr>
			<td><div class="button" onclick="cam(4)">‚áê</div></td>
			<td><div class="button" onclick="cam(5)">‚õî</div></td>
			<td><div class="button" onclick="cam(6)">‚áí</div></td>
		</tr>
		<tr>
			<td><div class="button" onclick="cam(1)">‚áô</div></td>
			<td><div class="button" onclick="cam(2)">‚áì</div></td>
			<td><div class="button" onclick="cam(3)">‚áò</div></td>
		</tr>
	</table>
	<table style="position: fixed; bottom: 0px;">
		<tr>
			<td><div class="button" onclick="lights()">üí°</div></td>
			<td><div class="button" onclick="laser()">üèÆ</div></td>
			<td><div class="button" onclick="speak()">üîä</div></td>
			<td><div class="button" onclick="fullscreen()">üîç</div></td>
		</tr>
	</table>
	<div id="status"><b style="color:yellow;">CONNECTING...</b></div>
</div>

<script>
// block right click menu and long presses
window.oncontextmenu = function(event) {event.preventDefault(); event.stopPropagation(); return false;};

// button release
document.addEventListener('mouseup', stop);
document.addEventListener('touchend', stop);

// start video stream
document.body.style.backgroundImage = "url('http://" + window.location.hostname + ":8080/?action=stream')";

// vars
var laser_first_time = false;

// setup and start websocket
var net = document.getElementById("status");
var ws_url = ("ws://" + window.location.hostname + ":8081");
var ws_ready = false;
var heart_beat;
var ws;
connect();

// websocket
function connect()
{
	console.log("Socket Connecting...");
	ws = new WebSocket(ws_url);

	ws.onopen = function()
	{
		console.log("Socket Connected");
		net.innerHTML = '<b style="color:lime;">CONNECTED</b>';
		heart_beat = setInterval(beat, 500);
		ws_ready = true;
	};

	ws.onclose = function()
	{
		console.log("Socket Closed");
		ws_ready = false;
		clearTimeout(heart_beat);
		ws = null;
		console.log("Retrying...");
		net.innerHTML = '<b style="color:red;">RETRYING...</b>';
		setTimeout(function(){connect();}, 500);
	};

	ws.onerror = function()
	{
		console.log("Socket Error");
		net.innerHTML = '<b style="color:red;">ERROR</b>';
		ws.close();
	};
}

// actions

function stop() {if (ws_ready == true) {ws.send(JSON.stringify({action: "stop"}));}}

function move(direction)
{
	if (ws_ready == true)
	{
		ws.send(JSON.stringify({action: "move", dir: direction}));
	}
}

function cam(direction)
{
	if (ws_ready == true)
	{
		ws.send(JSON.stringify({action: "cam", dir: direction}));
	}
}

function beat() {if (ws_ready == true) {ws.send(JSON.stringify({action: "beat"}));}}

function speak()
{
	if (ws_ready == true)
	{
		var speak_text = prompt("Speak:", "");
		if (!speak_text == null || !speak_text == "")
		{
			ws.send(JSON.stringify({action: "speak", text: speak_text}));
		}
	}
}

function laser()
{
	if (ws_ready == true)
	{
		if (laser_first_time == false)
		{
			alert("\t\t‚ö† DANGER ‚ö†\n  This is a real pointer laser!\n Do not aim at people's faces!");
			laser_first_time = true;
		}
		else
		{
			ws.send(JSON.stringify({action: "laser"}));
		}
	}
}

function lights() {if (ws_ready == true){ws.send(JSON.stringify({action: "lights"}));}}

var full = false;
var elem = document.documentElement;

function fullscreen()
{
	if (full == false)
	{
		if (elem.requestFullscreen) {elem.requestFullscreen();} 
		else if (elem.mozRequestFullScreen) {elem.mozRequestFullScreen();}
		else if (elem.webkitRequestFullscreen) {elem.webkitRequestFullscreen();}
		else if (elem.msRequestFullscreen) {elem.msRequestFullscreen();}
		full = true;
	}
	else
	{
		if (document.exitFullscreen) {document.exitFullscreen();}
		else if (document.mozCancelFullScreen) {document.mozCancelFullScreen();}
		else if (document.webkitExitFullscreen) {document.webkitExitFullscreen();}
		else if (document.msExitFullscreen) {document.msExitFullscreen();}
		full = false;
	}
}

</script>
</body>
</html>
